
@{
    ViewData["Title"] = "LandmarkList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head runat=server>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:200,300,400,700,900|Display+Playfair:200,300,400,700">


    <link rel="stylesheet" type="text/css" href="~/fonts/icomoon/style.css" media="screen" runat="server">

    <link rel="stylesheet" type="text/css" href="~/css/bootstrap.min.css" media="screen" runat="server">
    <link rel="stylesheet" type="text/css" href="~/css/magnific-popup.css" media="screen" runat="server">
    <link rel="stylesheet" type="text/css" href="~/css/jquery-ui.css" runat="server">
    <link rel="stylesheet" type="text/css" href="~/css/owl.carousel.min.css" media="screen" runat="server">
    <link rel="stylesheet" type="text/css" href="~/css/owl.theme.default.min.css" media="screen" runat="server">

    <link rel="stylesheet" type="text/css" href="~/css/bootstrap-datepicker.css" media="screen" runat="server">

    <link rel="stylesheet" type="text/css" href="~/fonts/flaticon/font/flaticon.css" media="screen" runat="server">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/mediaelement@4.2.7/build/mediaelementplayer.min.css">


    <link rel="stylesheet" type="text/css" href="~/css/aos.css" media="screen" runat="server">

    <link rel="stylesheet" type="text/css" href="~/css/style.css" media="screen" runat="server">
</head>



<script type="text/javascript">
    function add() {
        window.location.href = '@Url.Action("AddLandmark", "Landmarks")';
    }

    function redirectImagesContext() {

        window.location.href = '@Url.Action("Images", "Landmarks")';

    }

    function redirectToViewLandmark(id)
    {
        window.location.href ='@Url.Action("ViewLandmark", "Landmarks")/'+id;
    }

    function exportFile(id) {

        alert("hai ca exportam daca e");
        window.location.href = '@Url.Action("ExportFile", "Landmarks")/'+id;
    }
    function onLoadLandmarkList() {
         var url_string = window.location.href;
        var url = new URL(url_string);
        var id = url.searchParams.get("idCountry");
        document.getElementById("combo").value = id;
    }

</script>
<body onload="onLoadLandmarkList()">
    <pre id="output"></pre>

    <div class="site-wrap">

        <h1 class="text-center" style="margin:50px">Landmarks list</h1>

        <div>
            @(Html.Kendo().Button()
              .Name("primaryTextButton")
              .HtmlAttributes(new { type = "button", @class = "k-primary" })
              .Content("Add")
              .Events(ev => ev.Click("redirectToAddContext"))
              .Icon("k-icon k-i-plus-circle")
            )
        </div>

        @(Html.Kendo().DropDownList()
            .Name("CountryId")
            .DataTextField("CountryName")
            .DataValueField("CountryId")
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("PopulateCountryCombo", "Landmarks");
                });
            })
            .OptionLabel("select country")
            .HtmlAttributes(new { @id = "combo" })
        )
        @(Html.Kendo().Button()
    .Name("textButton")
    .HtmlAttributes(new { type = "button" })
    .Content("Filter")
    .Events(ev => ev.Click("refreshGrid"))
        )

        @(Html.Kendo().Grid<iWasHere.Domain.DTOs.LandmarkModel>
                ()
                .Name("landmarkGrid")
                .HtmlAttributes(new { style = "height: 380px;" })
                .Scrollable()
                .Groupable()
                .Sortable()
                .Columns(columns =>
                {
                    columns.Bound(o => o.LandmarkId).Hidden();
                    columns.Bound(o => o.LandmarkDescription).Title("Name");
                    columns.Bound(o => o.StreetName);
                    columns.Bound(o => o.StreetNumber);
                    columns.Bound(o => o.CityName);
                    columns.Bound(o => o.CountyName);
                    columns.Bound(o => o.CountryName);
                    columns.Template("<button id=\"deleteButton\" class=\"k-button\" onclick=\"deleteRow(#=LandmarkId#)\">Delete</button>");
                    columns.Template("<button id=\"editButton\" class=\"k-button\" onclick=\"redirectToEditContext(#=LandmarkId#)\"> Edit </button>");
                    columns.Template("<button id=\"viewButton\" class=\"k-button\" onclick=\"redirectToViewLandmark(#=LandmarkId#)\"> View </button>");
                    columns.Template("<button id=\"deleteButton\" class=\"k-button\" onclick=\"exportFile(#=LandmarkId#)\">Export</button>");
                })
                .NoRecords(true)
                .Filterable()
                .HtmlAttributes(new { @id = "landmarkGrid" })
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Read(read => read.Action("GetLandmarksFiltered", "Landmarks").Data("filter"))
                .Destroy(d => d.Action("Delete", "Landmarks"))
                )
        )
</body>



<script type="text/javascript">
        function filter(e) {
        var countryId = document.getElementById("combo").value;
        var filter = {};
        filter["countryId"] = countryId;
        return filter;
    }
     function refreshGrid() {
        $("#landmarkGrid").data("kendoGrid").dataSource.read();
        $("#landmarkGrid").data("kendoGrid").dataSource.page(1);
    }
    function add() {
        window.location.href = '@Url.Action("AddLandmark", "Landmarks")';
    }

    function redirectImagesContext() {
        window.location.href = '@Url.Action("Images", "Landmarks")';
    }

    function redirectToAddContext() {
        window.location.href = '@Url.Action("AddLandmark", "Landmarks")/?id=' + 0;
    }

    function redirectToEditContext(id) {
        window.location.href = '@Url.Action("AddLandmark", "Landmarks")/?id=' + id;
    }

    function refreshGrid() {
        $("#landmarkGrid").data("kendoGrid").dataSource.read();
        $("#landmarkGrid").data("kendoGrid").dataSource.page(1);
    }

    function openAddLandmarkPage(e) {
        window.location.href = '@Url.Action("AddLandmark", "Landmarks")';
    }

    function deleteRow(id) {
        $.ajax({
            type: 'DELETE',
            url: '@Url.Action("Delete", "Landmarks")',
            data: { id: id },
            success: function (response) {
                if (response == 0) {
                    alert("Atractia nu se poate sterge");
                } else {
                    alert("Atractie stearsa");
                    refreshGrid();
                }
            },
            error: function (response) {
                alert("Eroare!");
            }
        })
    }

</script>
