@model iWasHere.Domain.DTOs.LandmarkModel

@{
    ViewData["Title"] = "AddLandmark";
Layout = "~/Views/Shared/_Layout.cshtml";}

<h1>AddLandmark</h1>
<div id="googleMap" style="width:100%;height:300px;"></div>

<script>

    var map;
    var markers = [];
    function myMap() {
        var startLatLng = { lat: 44.4894, lng: 26.1267 };
        map = new google.maps.Map(document.getElementById('googleMap'), {
            zoom: 12,
            center: startLatLng,

        });

        map.addListener('click', function (event) {
            clearMarkers();
            addMarker(event.latLng);
            document.getElementById("Latitude").value = event.latLng.lat();
            document.getElementById("Longitude").value = event.latLng.lng();
        });

        addMarker(startLatLng);
    }

    function addMarker(location) {
        var marker = new google.maps.Marker({
            position: location,
            map: map
        });
        markers.push(marker);
    }

    function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    function clearMarkers() {
        setMapOnAll(null);
    }

    function showMarkers() {
        setMapOnAll(map);
    }

    function deleteMarkers() {
        clearMarkers();
        markers = [];
    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBYlEg-dW1i94xgQ2FC4u9IsLfx1kyFEf8&callback=myMap"></script>

<style>
    .map-container {
        position: absolute;
        bottom: 20%;
    }
</style>

<hr />

<body onload="onLoadEdit()" class="container">

    <div class="col-md-4">
        @(Html.Kendo().TextBoxFor(model => model.LandmarkId)
                .HtmlAttributes(new { @id = "LandmarkId", style = "margin:10px" })
        )
        <ul style="list-style-type:none">
            <li>
                <label>Landmark Name</label>
            </li>
            <li>
                @(Html.Kendo().TextBoxFor(model => model.LandmarkDescription)
                                    .HtmlAttributes(new { @id = "LandmarkName", style = "margin:10px" })
                )
            </li>

            <li>
                <label>Landmark Type</label>
            </li>
            <li>
                @(Html.Kendo().DropDownList()
                                 .Name("DictionaryLandmarkType")
                                 .DataTextField("LandmarkTypeCode")
                                 .DataValueField("LandmarkTypeId")
                                 .HtmlAttributes(new { style = "width: 75%", @id = "comboType" })
                                 .DataSource(source =>
                                 {
                                     source.Read(read =>
                                     {
                                         read.Action("GetAllLandmarkTypes", "Landmarks");
                                     });
                                 }))
            </li>

            <li>
                <label>Landmark has entry ticket?</label>
            </li>
            <li>

                <div class="form-group row">
                    <form action="">
                        <input id="yesRB" type="radio" name="gender"> Yes<br>
                        <input id="noRB" type="radio" name="gender"> No<br>
                    </form>
                </div>
            </li>

            <li>
                <label>Visit Interval</label>
            </li>
            <li>
                @(Html.Kendo().DropDownList()
                                 .Name("DictionaryInterval")
                                 .DataTextField("VisitIntervalName")
                                 .DataValueField("VisitIntervalId")
                                 .HtmlAttributes(new { style = "width: 75%", @id = "comboInterval" })
                                 .DataSource(source =>
                                 {
                                     source.Read(read =>
                                     {
                                         read.Action("GetAllVisitIntervals", "Landmarks");
                                     });
                                 }))
            </li>

            <li>
                <label>Ticket</label>
            </li>
            <li>
                @(Html.Kendo().DropDownList()
                                 .Name("DictionaryTicketType")
                                 .DataTextField("TicketTypeName")
                                 .DataValueField("TicketTypeId")
                                 .HtmlAttributes(new { style = "width: 75%", @id = "comboTicket" })
                                 .DataSource(source =>
                                 {
                                     source.Read(read =>
                                     {
                                         read.Action("GetAllTicketTypes", "Landmarks");
                                     });
                                 }))
            </li>

            <li>
                <label>City</label>
            </li>
            <li>
                @(Html.Kendo().DropDownList()
                                 .Name("DictionaryCity")
                                 .DataTextField("Name")
                                 .DataValueField("Id")
                                 .HtmlAttributes(new { style = "width: 75%", @id = "comboCity" })
                                 .DataSource(source =>
                                 {
                                     source.Read(read =>
                                     {
                                         read.Action("GetAllCities", "Landmarks");
                                     });
                                 }))
            </li>

            <li>
                <label>Street Name</label>
            </li>
            <li>
                @(Html.Kendo().TextBoxFor(model => model.StreetName)
                                    .HtmlAttributes(new { @id = "StreetName", style = "margin:10px" })
                )
            </li>

            <li>
                <label>Street Number</label>
            </li>
            <li>
                @(Html.Kendo().TextBoxFor(model => model.StreetNumber)
                                    .HtmlAttributes(new { @id = "StreetNumber", style = "margin:10px" })
                )
            </li>

            <li>
                <label>Latitude</label>
            </li>
            <li>
                @(Html.Kendo().TextBoxFor(model => model.Latitude)
                                    .HtmlAttributes(new { @id = "Latitude", style = "margin:5px", @readonly = "readonly" })
                )
            </li>

            <p></p>

            <li>
                <label>Longitude</label>
            </li>
            <li>
                @(Html.Kendo().TextBoxFor(model => model.Longitude)
                                    .HtmlAttributes(new { @id = "Longitude", style = "margin:5px", @readonly = "readonly" })
                )
            </li>
        </ul>


        <iframe hidden name="formSending"></iframe>

        <form method="post" action='@Url.Action("SaveImage", "Landmarks")' target="formSending">
            <div class="demo-section k-content">
                @(Html.Kendo().Upload()
                    .Name("files")
                    .HtmlAttributes(new { aria_label = "files", name = "pic", accept = "image/*" })
                )
                <p style="padding-top: 1em; text-align: right">
                    <input type="submit" value="Upload Image" class="k-button k-primary" />
                </p>
            </div>
        </form>

        <div>

            @(Html.Kendo().Button()
               .Name("primaryTextButton")
               .HtmlAttributes(new { type = "button", @class = "k-primary", @id = "buttonId" })
               .Content("Add")
               .Events(ev => ev.Click("add"))
            )

            @(Html.Kendo().Button()
              .Name("primaryTextButton")
              .HtmlAttributes(new { type = "button", @class = "k-primary" })
              .Content("Add New")
              .Events(ev => ev.Click("addNew"))
            )

            <p></p>

            @(Html.Kendo().Button()
        .Name("showDialogBtn")
       //.HtmlAttributes(new { style = "display:none;", @class = "hide-on-narrow" })
       .Content("Send Landmark via Email")
       .Events(ev => ev.Click("showDialog"))
            )
        </div>

        @*<p style="padding-top: 1em; text-align: right">
            <input type="submit" value="Send via Email" class="k-button k-primary" onclick="openEmail" />
        </p>*@

        <div id="example">
            @(Html.Kendo().Dialog()
                .Name("dialog")
                .Title("Info Dialog")
                .Content("Introduceti emailul!"+ "<br>  <input id='emailTB' type='text' name='email'><br>" )
                .Width(400)
                .Modal(false)
                .HtmlAttributes(new { @id = "dialog" })
                .Visible(false)
                .Actions(actions =>
                {
                    actions.Add().Text("Send").Action("sendEmail");
                })
                .Events(ev => ev.Close("onClose").Open("onOpen"))
            )
        </div>
    </div>
</body>

<div>
    <a asp-controller="Landmarks"
       asp-action="LandmarkList">Back to List</a>
</div>

<script type="text/javascript">
    
    function onClose() {
        $("#showDialogBtn").fadeIn();
    }

    function onOpen() {
        $("#showDialogBtn").fadeOut();
    }

    function showDialog() {
        $('#dialog').data("kendoDialog").open();
    }

    function addImage() {
        $.ajax({
            url: '@Url.Action("SaveImage", "Landmarks")',
            type: 'POST',
            data: $('#myForm').serialize(),
            success: function () {
                alert("Imagine salvata!"); 
            },
            error: function (response) {
                alert("Eroare!");
            }
        });
    }

    function sendEmail() {
        var sent = false;
        email= document.getElementById("emailTB").value;
        alert(email);
        @*$.ajax({
            type: 'GET',
            url: '@Url.Action("SendEmail", "Landmarks")',
            data: {
                email: document.getElementById("email").value
            },
            success: function (response) {
                sent = response;

                if (sent == false) {
                    alert("Email netrimis!");
                } else {
                    alert("Email trimis!");
                }
            },
            error: function (response) {
                alert("Eroare!");
            }
        })*@
    }

    function add() {
        if (document.getElementById('yesRB').checked) {
            h = true;
        } else {
            h = false;
        }

        var url_string = window.location.href;
        var url = new URL(url_string);
        var id = url.searchParams.get("id");
        var landmarkValidation = false;
        alert(id);
        if (!document.getElementById("LandmarkName").value ||
            !document.getElementById("StreetName").value ||
            !document.getElementById("StreetNumber").value ||
            !document.getElementById("comboType").value) {
            alert("Campuri necompletate!");
        } else if (!document.getElementById("Latitude").value ||
            !document.getElementById("Longitude").value) {
            alert("Plasati un pin pe harta!");
        } else {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("VerifyLandmark", "Landmarks")',
                data: {
                    landmarkName: document.getElementById("LandmarkName").value,
                    latitude: document.getElementById("Latitude").value,
                    longitude: document.getElementById("Longitude").value
                },
                success: function (response) {
                    landmarkValidation = response;

                    if (landmarkValidation == false) {

                        if (id != 0) {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("EditLandmark", "Landmarks")',
                                data: {
                                    landmarkName: document.getElementById("LandmarkName").value,
                                    landmarkTypeId: document.getElementById("comboType").value,
                                    hasEntryTicket: h,
                                    visitIntervalId: document.getElementById("comboInterval").value,
                                    ticketId: document.getElementById("comboTicket").value,
                                    streetName: document.getElementById("StreetName").value,
                                    streetNumber: document.getElementById("StreetNumber").value,
                                    cityId: document.getElementById("comboCity").value,
                                    latitude: document.getElementById("Latitude").value,
                                    longitude: document.getElementById("Longitude").value,
                                    landmarkId: document.getElementById("LandmarkId").value
                                },
                                success: function (response) {
                                    alert("Atractie editata!");
                                    window.location.href = '@Url.Action("LandmarkList", "Landmarks")';
                                },
                                error: function (response) {
                                    alert("Eroare!");
                                }
                            })
                        }
                        else {
                            $.ajax({
                                type: 'PUT',
                                url: '@Url.Action("SaveLandmark", "Landmarks")',
                                data: {
                                    landmarkName: document.getElementById("LandmarkName").value,
                                    landmarkTypeId: document.getElementById("comboType").value,
                                    hasEntryTicket: h,
                                    visitIntervalId: document.getElementById("comboInterval").value,
                                    ticketId: document.getElementById("comboTicket").value,
                                    streetName: document.getElementById("StreetName").value,
                                    streetNumber: document.getElementById("StreetNumber").value,
                                    cityId: document.getElementById("comboCity").value,
                                    latitude: document.getElementById("Latitude").value,
                                    longitude: document.getElementById("Longitude").value
                                },
                                success: function (response) {
                                    alert("Atractie salvata!");
                                    //if (fromUpdate) {
                                    //    document.getElementById("LandmarkName").value = "";
                                    //    fromUpdate = false;
                                    //}                                    
                                    $.ajax({
                                        url: '@Url.Action("SaveImagesDB", "Landmarks")',
                                        type: 'put',
                                        success: function () {
                                            alert("Imagine salvata!");
                                        },
                                        error: function () {
                                            alert("Eroare imagine!");
                                        }
                                    });
                                    window.location.href = '@Url.Action("LandmarkList", "Landmarks")';
                                },
                                error: function (response) {
                                    alert("Eroare!");
                                }
                            })
                        }
                    } else {
                        alert("Atractie deja existenta!");
                    }
                },
                error: function (response) {
                    alert("Eroare!");
                }
            })
        }
    }

    function onLoadEdit() {
        var url_string = window.location.href;
        var url = new URL(url_string);
        document.getElementById("LandmarkId").style.visibility = "hidden";
        var id = url.searchParams.get("id");
        if (id != 0) {
            document.getElementById("buttonId").innerText = "Update";
        }
    }

    function addNew() {
        fromUpdate = true;
        add();
    }

</script>


