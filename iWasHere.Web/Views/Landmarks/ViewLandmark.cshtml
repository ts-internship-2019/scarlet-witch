
@{
    ViewData["Title"] = "ViewLandmark";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@model iWasHere.Domain.DTOs.LandmarkModel;


<h1>@Html.DisplayFor(model => model.LandmarkDescription)</h1>
<div id="googleMap" style="width:100%;height:400px;" class="map-container"></div>
<script>
    var map;
    var markers = [];
    function onLoadView() {
        var a = parseFloat(document.getElementById("Latitude").value);
        var b = parseFloat(document.getElementById("Longitude").value);
        var startLatLng = { lat: a, lng: b };
        map = new google.maps.Map(document.getElementById('googleMap'), {
            zoom: 5,
            center: startLatLng,
        });
        addMarker(startLatLng);
    }



    function addMarker(location) {
        var marker = new google.maps.Marker({
            position: location,
            map: map
        });
        markers.push(marker);
    }


    function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }


    function clearMarkers() {
        setMapOnAll(null);
    }


    function showMarkers() {
        setMapOnAll(map);
    }


    function deleteMarkers() {
        clearMarkers();
        markers = [];
    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBYlEg-dW1i94xgQ2FC4u9IsLfx1kyFEf8&callback=onLoadView"></script>

<style>

    .left-div {
        display: inline-block;
        max-width: 400px;
        text-align: left;
        padding: 10px;
        border-radius: 3px;
        margin: 5px;
        vertical-align: top;
    }

    .right-div {
        display: inline-block;
        max-width: 700px;
        max-height:350px;
        text-align: left;
        padding: 10px;
        border-radius: 3px;
        margin: 5px;
    }
</style>


<body onload="onLoadView()" >
    <div class="container">
        <div class="row ">
            <div class="col-md-12">
                <div class="left-div">
                    <ul style="list-style-type:none;">
                        <li>
                            <label>LandmarkType:</label>
                            @Html.DisplayFor(model => model.LandmarkType.LandmarkTypeCode)
                        </li>
                        <li>
                            <label>Interval:</label>
                            @Html.DisplayFor(model => model.VisitInterval.VisitIntervalName)
                        </li>
                        <li>
                            <label>Ticket:</label>
                            @Html.DisplayFor(model => model.Ticket)
                        </li>
                        <li>
                            <label>Ticket Price:</label>
                            @string.Format("{0:f2}", Model.TicketCost * Model.CurrencyRate)RON
                        </li>
                        <li>
                            <label>Street Name:</label>
                            @Html.DisplayFor(model => model.StreetName)
                        </li>
                        <li>
                            <label>Street Number:</label>
                            @Html.DisplayFor(model => model.StreetNumber)
                        </li>
                        <li>
                            <label>City:</label>
                            @Html.DisplayFor(model => model.City.CityName)
                        </li>
                        <li>
                            <label>County:</label>
                            @Html.DisplayFor(model => model.County)
                        </li>
                        <li>
                            <label>Country:</label>
                            @Html.ActionLink(Model.CountryName, "LandmarkList", "Landmarks", new { id = Model.Country })
                        </li>
                        <li>
                            <label>Latitude:</label>
                            @(Html.Kendo().TextBoxFor(model => model.Latitude)
                                 .HtmlAttributes(new { @id = "Latitude", style = "margin:5px", @readonly = "readonly" })
                            )
                        </li>
                        <li>
                            <label>Longitude:</label>
                            @(Html.Kendo().TextBoxFor(model => model.Longitude)
                                 .HtmlAttributes(new { @id = "Longitude", style = "margin:5px", @readonly = "readonly" })
                            )
                        </li>
                    </ul>

                </div>

                <div class="right-div">
                    @*<img src="~/@Model.Path" alt="This landmark has no image" />*@
                    <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
                        <div class="carousel-inner">
                            @if (Model.Path.Count > 0)
                            {

                                @foreach (var te in Model.Path)
                                {
                                    int currentIndex = Model.Path.IndexOf(te);
                                    @if (currentIndex == 0)
                                    {
                                        <div class="carousel-item active">
                                            <img class="d-block w-100" src="~/@te.Path" alt="This landmark has no image" style="height:330px; width:500px">
                                        </div> }
                                    else
                                    {
                                        <div class="carousel-item">
                                            <img class="d-block w-100" src="~/@te.Path" alt="This landmark has no image" style="height:330px; width:500px">
                                        </div>}
                                }
                            }
                            else {<div class="carousel-item active">
                                <img class="d-block w-100" src="~/no-image.png" alt="This landmark has no image" style="height:330px; width:500px">
                            </div> }
                        </div>
                        <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>

                </div>

            </div>
        </div>
    </div>

    <div>
        @(Html.Kendo().Button()
       .Name("showDialogBtn")
      //.HtmlAttributes(new { style = "display:none;", @class = "hide-on-narrow" })
      .Content("Send Landmark via Email")
      .Events(ev => ev.Click("showDialog"))
        )
    </div>

    <div>

        <h2>Reviews</h2>
        <input type="button" class="k-primary"
               value="Add Review"
               onclick="location.href='@Url.Action("AddComment", "Comment")/'+@Model.LandmarkId " />
        @if (Model.Reviews != null) {
        @foreach (var item in Model.Reviews)
        {
            <div>
                <hr />
                <ul style="list-style-type:none;">
                    <li><h4>@item.Title</h4></li>
                    <li>@item.UserName</li>
                    <li>
                        @for (var i = 0; i < item.Grade; i++)
                        {<span style="color:darkgoldenrod">&#9733;</span>}
                        @for (var i = 0; i < 10-item.Grade; i++)
                        {<span style="color:darkgoldenrod; opacity: 0.5">&#9733;</span>}
                    </li>
                <li>@item.Review1</li>
            </ul>
        </div>}
    }
    </div>

    <div id="example">
        @(Html.Kendo().Dialog()
            .Name("dialog")
            .Title("Info Dialog")
            .Content("Introduceti emailul!" + "<br>  <input id='emailTB' type='text' name='email'><br>")
            .Width(400)
            .Modal(false)
            .HtmlAttributes(new { @id = "dialog" })
            .Visible(false)
            .Actions(actions =>
            {
                actions.Add().Text("Send").Action("sendEmail");
            })
            .Events(ev => ev.Close("onClose").Open("onOpen"))
        )
    </div>
</body>

@*<input type="button"
    value="Add Comment"
    onclick="location.href='@Url.Action("AddComment", "Comment")/'+@Model.LandmarkId "/>*@


<style>
    .carousel-control-next,
    .carousel-control-prev {
        filter: invert(100%);
    }

    fieldset, label {
        margin: 0;
        padding: 0;
    }

    body {
        margin: 20px;
    }

    h1 {
        font-size: 1.5em;
        margin: 10px;
    }

    /****** Style Star Rating Widget *****/

    .rating {
        border: none;
        float: left;
    }

        .rating > input {
            display: none;
        }

        .rating > label:before {
            margin: 5px;
            font-size: 1.25em;
            font-family: FontAwesome;
            display: inline-block;
            content: "\f005";
        }

        .rating > .half:before {
            content: "\f089";
            position: absolute;
        }

        .rating > label {
            color: #ddd;
            float: right;
        }
</style>

<script type="text/javascript">
    function onClose() {
        $("#showDialogBtn").fadeIn();
    }

    function onOpen() {
        $("#showDialogBtn").fadeOut();
    }

    function showDialog() {
        $('#dialog').data("kendoDialog").open();
    }

    function sendEmail() {
        var sent = false;

        $.ajax({
            type: 'GET',
            url: '@Url.Action("SendEmail", "Landmarks")',
            data: {
                email: document.getElementById("emailTB").value,
                id: @Model.LandmarkId 
            },
            success: function (response) {
                sent = response;
                if (response == false) {
                    alert("Email netrimis!");
                } else {
                    alert("Email trimis!");
                }
            },
            error: function (response) {
                alert("Eroare!");
            }
        });
    }
</script>