
@{

    ViewData["Title"] = "AddCurrency";
Layout = "~/Views/Shared/_Layout.cshtml";}


    <h1 class="text-center" style="margin:50px">Add currency</h1>
<script>
    let fromUpdate = false;

    function AddCurrency() {
        var url_string = window.location.href;
        var url = new URL(url_string);
        var id = url.searchParams.get("id");
        document.getElementById("currencyName").value = document.getElementById("currencyName").value.trim();
              document.getElementById("currencyCode").value = document.getElementById("currencyCode").value.trim();
            if (id != 0) {           
            if (document.getElementById("currencyName").value != ""  &&  document.getElementById("currencyCode").value != "" &&  document.getElementById("currencyName").value.length !=0 && document.getElementById("currencyCode").value.length !=0) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EditCurrency", "DictionaryCurrency")',
                    data: {
                        currencyName: document.getElementById("currencyName").value,
                        currencyCode: document.getElementById("currencyCode").value,
                        currencyExchange: document.getElementById("currencyExchange").value,
                        currencyId: document.getElementById("currencyId").value
                    },
                    success: function (response) {

                        window.location.href = '@Url.Action("Index", "DictionaryCurrency")';
                    },
                    error: function (response) {
                        alert("Currency already exists!");
                    }
                })
            }
            else { alert("Currency name or code empty!") }
        }
        else {
            if (document.getElementById("currencyName").value != "" && document.getElementById("currencyCode").value != "" && document.getElementById("currencyName").value.length !=0 && document.getElementById("currencyCode").value.length !=0 ) {
                $.ajax({
                    type: 'PUT',
                    url: '@Url.Action("SaveCurrency", "DictionaryCurrency")',
                    data: {
                        currencyName: document.getElementById("currencyName").value,
                        currencyCode: document.getElementById("currencyCode").value,
                        currencyExchange: document.getElementById("currencyExchange").value
                    },
                    success: function (response) {
                        if (fromUpdate) {
                            document.getElementById("currencyName").value = "";
                            document.getElementById("currencyCode").value = "";
                            document.getElementById("currencyExchange").value = "";
                            fromUpdate = false;
                        }
                        else {
                            window.location.href = '@Url.Action("Index", "DictionaryCurrency")';
                        }

                    },
                    error: function (response) {
                        alert("Currency already exists!");
                    }
                })
            }
            else { alert("Currency name or code empty!");}
        }

    }

    function onLoadEdit() {

        var url_string = window.location.href;
        var url = new URL(url_string);
        document.getElementById("currencyId").style.visibility = "hidden";

        var id = url.searchParams.get("id");
        if (id != 0) {
            document.getElementById("buttonId").innerText = "Update";
        }
    }

    function cancelAdd() {
        window.location.href = '@Url.Action("Index", "DictionaryCurrency")';
    }

    function AddNew() {
          fromUpdate = true;
          AddCurrency();
    }
    
</script>

@model iWasHere.Domain.DTOs.DictionaryCurrencyModel;

<style>
    .txtBoxStyle {

        position: absolute;
            right:60%;            
            padding: 10%;

    }

</style>


<body class="text-center" onload="onLoadEdit()">


    <ul style="list-style-type:none" >
        <li>
            <label>Currency Name</label>
            @(Html.Kendo().TextBoxFor(model => model.CurrencyName)
                              .HtmlAttributes(new { @id = "currencyName", style = "margin:20px; left:6.5%",@maxlength="250" })

            )

        </li>
        <li>
            <label>Currency Code</label>
            @(Html.Kendo().TextBoxFor(model => model.CurrencyCode)
                    .HtmlAttributes(new { @id = "currencyCode", style = "margin:20px; left:7%",@maxlength="100" })
            )
        </li>
        <li>
            <label>Currency Exchange</label>
            @(Html.Kendo().NumericTextBoxFor(model => model.CurrencyExchange)
                    .HtmlAttributes(new { @id = "currencyExchange", style = "margin:10px; left:5%", aria_label = "Currency Exchange ",@maxlength="10" })
            )
        </li>
        <li>
            @(Html.Kendo().TextBoxFor(model => model.CurrencyId)
                .HtmlAttributes(new { @id = "currencyId", style = "margin:10px" })
            )
        </li>
    </ul>

    <div>
        @(Html.Kendo().Button()
                  .Name("primaryTextButton")
                  .HtmlAttributes(new { type = "button", @class = "k-primary", @id = "buttonId", style = "margin:10px" })
                  .Content("Add")
                  .Icon("k-icon k-i-plus-circle")
                  .Events(ev => ev.Click("AddCurrency"))
        )
        @(Html.Kendo().Button()
          .Name("addNewButton")
          .HtmlAttributes(new { type = "button", @class = "k-primary" })
          .Content("Add New")
          .Icon("k-icon k-i-plus")
          .Events(ev => ev.Click("AddNew"))
        )
        @(Html.Kendo().Button()
              .Name("cancelButton")
              .HtmlAttributes(new { type = "button", @class = "k-primary" })
              .Content("Cancel")
              .Icon("cancel")
              .Events(ev => ev.Click("cancelAdd"))
        )
    </div>

</body>