
@{
    ViewData["Title"] = "Landmark Type";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center" style="margin:50px">Landmark types</h1>


<script>
    function foo()
    {
        window.location.href = '@Url.Action("LandmarkTypeAdd", "DictionaryLandmarkType")';
    }
</script>

<script type="text/javascript">

    function filter(e) {
        var landmarkTypeName = document.getElementById("landmarkTextBox").value;
        var filter = {};
        filter["landmarkTypeName"] = landmarkTypeName;
        return filter;
    }

    function deleteFilter() {
        document.getElementById("landmarkTextBox").value = "";
        refreshGrid();
    }

     function deleteRow(id) {
             $.ajax({
                    type: 'DELETE',
                    url: '@Url.Action("Delete", "DictionaryLandmarkType")',
                    data: { id: id },
                 success: function (response) {
                     alert("hai ca merge");
                     alert(id);
                        $("#landmarkGrid").data("kendoGrid").dataSource.read();
                    },
                        error: function (response) {
                        alert("This landmark type cannot be deleted because it is being used by a Landmark");
                    }
                })
    }

    function refreshGrid() {
        $("#landmarkGrid").data("kendoGrid").dataSource.read();
        $("#landmarkGrid").data("kendoGrid").dataSource.page(1);
    }

     function redirectToAddContext()
    {
            window.location.href = 'DictionaryLandmarkType/LandmarkTypeAdd/?id=' + 0;
    }

    function redirectToEditContext(id)
    {
        window.location.href = 'DictionaryLandmarkType/LandmarkTypeAdd/?id=' + id;
    }
</script>
@(Html.Kendo().Button()
           .Name("primaryTextButton")
           .HtmlAttributes(new { type = "button", @class = "k-primary" })
           .Content("Add")
           .Icon("k-icon k-i-plus")
           .Events(ev => ev.Click("redirectToAddContext"))
)

@(Html.Kendo().TextBox()
.Name("landmarkTextBox")
.HtmlAttributes(new { @id = "landmarkTextBox" })
)

@(Html.Kendo().Button()
.Name("textButton")
.HtmlAttributes(new { type = "button" })
.Content("Filter")
.Icon("filter")
.Events(ev => ev.Click("refreshGrid"))
)
@(Html.Kendo().Button()
.Name("filterButton")
.HtmlAttributes(new { type = "button" })
.Content("Clear Filters")
.Icon("filter-clear")
.Events(ev => ev.Click("deleteFilter"))
)



@(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryLandmarkTypeModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(o => o.LandmarkTypeId).Hidden();
            columns.Bound(o => o.LandmarkTypeCode);
            columns.Bound(o => o.Description);
           columns.Template("<button id=\"deleteButton\" class=\"k-button\" onclick=\"deleteRow(#=LandmarkTypeId#)\">Delete</button>");
            columns.Template("<button id=\"editButton\" class=\"k-button\" onclick=\"redirectToEditContext(#=LandmarkTypeId#)\"> Edit </button>");
    })
        .HtmlAttributes(new { style = "height: 380px;" })
        .Scrollable()
        .Groupable()
        .Sortable()
        .NoRecords(true)
        .Filterable()
        .HtmlAttributes(new { @id = "landmarkGrid" })
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(10))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Read(read => read.Action("GetDictionaryLandmarkTypesFiltered", "DictionaryLandmarkType").Data("filter"))
             .Destroy(d => d.Action("Delete", "DictionaryLandmarkType")))

)


