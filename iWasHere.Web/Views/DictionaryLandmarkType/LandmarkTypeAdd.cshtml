@model iWasHere.Domain.DTOs.DictionaryLandmarkTypeModel;
@{
    ViewData["Title"] = "LandmarkTypeAdd";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
}


<h1 style="margin:50px">Add a Landmark type</h1>

<script>

    let fromUpdate = false;

    function AddLandmarkTpy() {
        var url_string = window.location.href;
        var url = new URL(url_string);
        var id = url.searchParams.get("id");
        if (id != 0) {
            $.ajax({
            type: 'POST',
            url: '@Url.Action("EditLandmarkType", "DictionaryLandmarkType")',
            data: {
                landmarkTypeId: document.getElementById("landmarkTypeId").value,
                landmarkCode: document.getElementById("LandmarkTypeCode").value,
                description: document.getElementById("Description").value

            },
            success: function (response) {

                 window.location.href = '@Url.Action("Index", "DictionaryLandmarkType")';
            },
            error: function (response) {
                //alert("hai ca nu merge");
            }
        })
        }
        else {
            if (document.getElementById("LandmarkTypeCode").value != "") {
                $.ajax({
                    type: 'PUT',
                    url: '@Url.Action("SaveLandmarkType", "DictionaryLandmarkType")',
                    data: {
                        landmarkTypeId: document.getElementById("landmarkTypeId").value,
                        landmarkCode: document.getElementById("LandmarkTypeCode").value,
                        description: document.getElementById("Description").value

                    },
                    success: function (response) {
                        if (fromUpdate) {
                            document.getElementById("LandmarkTypeCode").value = "";
                            document.getElementById("Description").value = "";

                            fromUpdate = false;
                        }
                        else {
                            window.location.href = '@Url.Action("Index", "DictionaryLandmarkType")';

                        }

                    },
                    error: function (response) {
                        //alert(String(response));

                    }
                })
            } else {
                alert("Landmark code cannot be empty");
            }
           
        }

    }

     function onLoadEdit() {

        var url_string = window.location.href;
        var url = new URL(url_string);
        document.getElementById("landmarkTypeId").style.visibility = "hidden";

        var id = url.searchParams.get("id");
        if (id != 0) {
            //alert("din edit");
            document.getElementById("buttonId").innerText = "Update";
            document.getElementById("buttonNewId").style.visibility = "hidden";
        }
        else {
            //alert("Landmark Type code cannot be empty");
        }
    }

    function cancelAdd() {
        window.location.href = '@Url.Action("Index", "DictionaryLandmarkType")';
    }

    function AddNew() {
        fromUpdate = true;
        AddLandmarkTpy();
    }

</script>


<body class="text-center" onload="onLoadEdit()">
    <div class="form-group">

        <ul style="list-style-type:none">
            <li>
                <label>Landmark type code</label>
            </li>

            <li>
                @(Html.Kendo().TextBoxFor(model => model.LandmarkTypeCode)
                                       .HtmlAttributes(new { @id = "LandmarkTypeCode", style = "margin:10px", @maxlength = "10" })

                )
            </li>

            <li>
                <label>Description</label>
            </li>

            <li>
                @(Html.Kendo().TextBoxFor(model => model.Description)
             .HtmlAttributes(new { @id = "Description", style = "margin:10px", @maxlength = "300"})

                            )
            <li>
                @(Html.Kendo().TextBoxFor(model => model.LandmarkTypeId)
                .HtmlAttributes(new { @id = "landmarkTypeId", style = "margin:10px" })
                )
            </li>
                
        </ul>

        <div style="margin-left:10px">
            @(Html.Kendo().Button()
                          .Name("primaryTextButton")
                          .HtmlAttributes(new { type = "button", @class = "k-primary", @id = "buttonId" })
                          .Content("Add")
                          .Icon("k-icon k-i-plus-circle")
                          .Events(ev => ev.Click("AddLandmarkTpy"))
            )
            @(Html.Kendo().Button()
                  .Name("addNewButton")
                  .HtmlAttributes(new { type = "button", @class = "k-primary", @id = "buttonNewId" })
                  .Content("Add New")
                  .Icon("k-icon k-i-plus")
                  .Events(ev => ev.Click("AddNew"))
            )
            @(Html.Kendo().Button()
                  .Name("cancelButton")
                  .HtmlAttributes(new { type = "button", @class = "k-primary" })
                  .Content("Cancel")
                  .Icon("cancel")
                  .Events(ev => ev.Click("cancelAdd"))
            )
        </div>

    </div>
</body>

